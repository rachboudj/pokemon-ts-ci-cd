name: GitHub Actions Demo

# D√©clenche la pipeline sur les √©v√©nements de `push` ou de `pull_request`.
on: [push, pull_request]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Clone le code de votre d√©p√¥t dans l'environnement du runner.
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      # Configure Node.js (version 20) sur le runner et utilise un cache pour acc√©l√©rer les installations.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Configure un agent SSH en utilisant la cl√© priv√©e stock√©e dans les secrets GitHub.
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Ajouter le serveur distant √† known_hosts pour √©viter les probl√®mes de s√©curit√©
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      # Ajoute manuellement l'h√¥te distant √† la liste `known_hosts` pour √©viter des avertissements de s√©curit√© SSH.
      - name: Adding Known Host
        run: ssh-keyscan -H 152.228.134.113 >> ~/.ssh/known_hosts

      # Ex√©cute une commande SSH pour lister les fichiers pr√©sents dans le r√©pertoire `/var/www` du serveur distant.
      - name: Ls on server
        run: ssh debian@152.228.134.113 'ls -la /var/www'

      # Installer les d√©pendances du projet avec `npm ci`.
      # - name: Install dependencies
      #   run: npm ci

      # V√©rifier la mise en forme du code avec Prettier.
      # - name: Check Prettier formatting
      #   run: npm run format:check

      # V√©rifier les r√®gles de linting avec ESLint.
      # - name: Run ESLint
      #   run: npm run lint

      # V√©rifier les types avec TypeScript.
      # - name: Check TypeScript types
      #   run: npm run type-check

      # Compiler le projet avec la commande de build.
      # - name: Build the project
      #   run: npm run build

      # Lister les fichiers du projet dans le r√©pertoire local du runner.
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}

      # Affiche un message indiquant le statut final du job.
      - run: echo "üçè This job's status is ${{ job.status }}."
